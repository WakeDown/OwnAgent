@using Data.Models
@using Data.Services
@using Microsoft.AspNet.Identity
@using OwnAgent.Models
@model Models.ViewModels.SpendNewViewModel
@{
    ViewBag.Title = "Новая запись";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string clientId = ViewBag.ClientId;
    var billList = SpendService.Instance(ViewBag.UserSid).SpendBillGetList();
}

<p>

    <div class="row">
        <div class="col-sm-7 col-md-4 col-lg-4">
            <div class="panel panel-default no-border">
                <div style="position: relative; height: 50px">
                    <ul class="nav nav-tabs no-border" role="tablist" style="position: absolute; bottom: 0;">
                        <li role="presentation" class="active tab tab-bg-danger"><a href="#expTab" class="" aria-controls="expTab" role="tab" data-toggle="tab"><i class="fa fa-minus-circle text-danger"></i> Расход</a></li>
                        <li role="presentation" class="tab tab-bg-success"><a href="#incTab" aria-controls="incTab" role="tab" data-toggle="tab"><i class="fa fa-plus-circle text-success"></i> Доход</a></li>
                        <li role="presentation" class="tab tab-bg-warning"><a href="#tranTab" aria-controls="tranTab" role="tab" data-toggle="tab"><i class="fa fa-recycle text-warning"></i> Перевод</a></li>
                    </ul>
                </div>
                <div class="panel-body tab-pane-panel-body">
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane active tab-pane-danger" id="expTab">
                            <div class="form-group">
                                <label for="bill" class="control-label">Счет</label> <span id="billStatContainer"></span>
                                @Html.DropDownListFor(m => m.BillId, new SelectList(billList, "Id", "Name"), new {@class = "form-control", required = "required", id = "bill"})
                            </div>
                            <div class="form-group">
                                <label for="sum" class="control-label">Сумма</label>
                                @Html.TextBoxFor(m => m.Sum, "{0:N0}", new {@class = "form-control", required = "required", id = "sum", placeholder = "Сумма", type = "number"})
                            </div>
                            <div class="form-group">
                                <label for="category" class="control-label">Категория</label> <span id="catStatContainer"></span>
                                @Html.DropDownListFor(m => m.CategoryId, new SelectList(SpendService.Instance(ViewBag.UserSid).GetCategorySelectionList4NewSpend(), "Key", "Value"), new {required = "required", id = "category", @class = "form-control"})
                            </div>
                            <div class="form-group">
                                <label for="date" class="control-label">Дата</label>
                                @Html.TextBoxFor(m => m.Date, "{0:d}", new {@id = "date", @class = "form-control", required = "required", placeholder = "Дата"})
                            </div>
                            <div class="form-group">
                                <label for="comment" class="control-label">Комментарий</label>
                                @Html.TextAreaFor(m => m.Comment, new {id = "comment", @class = "form-control", placeholder = "Комментарий"})
                            </div>
                            <div class="form-group">
                                <button id="exp" type="button" class="btn btn-danger btn-lg btn-block"><i class="fa fa-minus-circle"></i> Списать</button>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane tab-pane-success" id="incTab">
                            <div class="form-group">
                                <label for="bill" class="control-label">Счет</label> <span id="billStatContainer"></span>
                                @Html.DropDownListFor(m => m.BillId, new SelectList(billList, "Id", "Name"), new {@class = "form-control", required = "required", id = "bill"})
                            </div>
                            <div class="form-group">
                                <label for="sum" class="control-label">Сумма</label>
                                @Html.TextBoxFor(m => m.Sum, "{0:N0}", new {@class = "form-control", required = "required", id = "sum", placeholder = "Сумма", type = "number"})
                            </div>
                            <div class="form-group">
                                <label for="category" class="control-label">Категория</label> <span id="catStatContainer"></span>
                                @Html.DropDownListFor(m => m.CategoryId, new SelectList(SpendService.Instance(ViewBag.UserSid).GetCategorySelectionList4NewSpend(), "Key", "Value"), new {required = "required", id = "category", @class = "form-control"})
                            </div>
                            <div class="form-group">
                                <label for="date" class="control-label">Дата</label>
                                @Html.TextBoxFor(m => m.Date, "{0:d}", new {@id = "date", @class = "form-control", required = "required", placeholder = "Дата"})
                            </div>
                            <div class="form-group">
                                <label for="comment" class="control-label">Комментарий</label>
                                @Html.TextAreaFor(m => m.Comment, new {id = "comment", @class = "form-control", placeholder = "Комментарий"})
                            </div>
                            <div class="form-group">
                                <button id="inc" type="button" class="btn btn-success btn-lg btn-block"><i class="fa fa-plus-circle"></i> Зачислить</button>
                            </div>
                        </div>
                        <div role="tabpanel" class="tab-pane tab-pane-warning" id="tranTab">
                            <div class="form-group">
                                <label for="bill" class="control-label">Счет</label> <span id="billStatContainer"></span>
                                @Html.DropDownListFor(m => m.BillId, new SelectList(billList, "Id", "Name"), new { @class = "form-control", required = "required", id = "bill" })
                            </div>
                            <div class="form-group">
                                <label for="sum" class="control-label">Сумма</label>
                                @Html.TextBoxFor(m => m.Sum, "{0:N0}", new { @class = "form-control", required = "required", id = "sum", placeholder = "Сумма", type = "number" })
                            </div>
                            <div class="form-group">
                                <label for="category" class="control-label">Категория</label> <span id="catStatContainer"></span>
                                @Html.DropDownListFor(m => m.CategoryId, new SelectList(SpendService.Instance(ViewBag.UserSid).GetCategorySelectionList4NewSpend(), "Key", "Value"), new { required = "required", id = "category", @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label for="date" class="control-label">Дата</label>
                                @Html.TextBoxFor(m => m.Date, "{0:d}", new { @id = "date", @class = "form-control", required = "required", placeholder = "Дата" })
                            </div>
                            <div class="form-group">
                                <label for="comment" class="control-label">Комментарий</label>
                                @Html.TextAreaFor(m => m.Comment, new { id = "comment", @class = "form-control", placeholder = "Комментарий" })
                            </div>
                            <div class="form-group">
                                <button id="inc" type="button" class="btn btn-warning btn-lg btn-block"><i class="fa fa-recycle"></i> Перевести</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            
            @*<div class="row">
                    <div class="col s12">
                        <label for="vector">Вектор</label>
                        @Html.DropDownListFor(m => m.VectorId, SpendVector.GetSelectionList(clientId), new { required = "required", id = "vector", @class = "browser-default" })

                    </div>
                </div>*@

        </div>
        <div class="col-sm-5 col-md-4 col-lg-3">
            <h5>Предыдущие записи</h5>
            <div id="lastAddContainer">
                <div class="loader"></div>
            </div>
            @*<h6>Быстрый выбор</h6>
                <div id="spendTopContainer">@Html.Partial("Loader")</div>*@
        </div>
    </div>
</p>
@*<p>
        <div class="row">
            <div class="col s12 m8 l6">
                <h5>Недавно добавлено</h5>
                <div id="lastAddContainer">
                    @Html.Partial("Loader")
                </div>
            </div>
        </div>
    </p>*@

@section scripts
{
    <script type="text/javascript">
        $(function () {
            setPanelBodyBorder();
            $('.tab').click(function() {
                setTimeout(setPanelBodyBorder, 100);
            });
            //$("#showTop").sideNav();
            //$("#showTop").click(loadTop);
            $('#bill').change(loadBillState);
            $('#category').change(loadCatState);
            $('#inc').click(function () {
                save('@Url.Action("SpendIncome", "Balance")', this);
            });
            $('#exp').click(function () {
                save('@Url.Action("SpendExpense", "Balance")', this);
            });
            //$('#date').pickadate({
            //    selectMonths: true, // Creates a dropdown to control month
            //    selectYears: 15, // Creates a dropdown of 15 years to control year
            //    format: 'dd.mm.yyyy',
            //    firstDay: 'Mon',
            //    closeOnSelect: true
            //});
            $('#date').datepicker({
                format: 'dd.mm.yyyy',
                language: "ru",
                todayHighlight: true,
                autoclose: true
            });
            $("#sum").val('').focus();
            $("[name='shortKey']").click(function () {
                var catId = $(this).attr('category');
                var vectId = $(this).attr('vector');
                var sum = $(this).attr('sum');
                $("#sum").val(sum);
                $("#vector option").filter(function () {
                    return $(this).attr('value') === vectId;
                }).attr('selected', true);
                $("#category option").filter(function () {
                    return $(this).attr('value') === catId;
                }).attr('selected', true);
                //$('#frmSpend').submit();
            });
            loadLastadd();
            loadBillState();
            loadCatState();
            //loadSpendTop();
        });
        function setPanelBodyBorder() {
            
            var $tb = $('.tab-pane-panel-body');
            var $tp = $('.tab-pane.active');
            $tb.removeClass(function (index, css) {
                return (css.match(/\btab-pane-panel-body-bd-\S+/g) || []).join(' ');
            });
            if ($tp.is('.tab-pane-danger')) {
                $tb.addClass('tab-pane-panel-body-bd-danger');
            }
            else if ($tp.is('.tab-pane-success')) {
                $tb.addClass('tab-pane-panel-body-bd-success');
            } else if ($tp.is('.tab-pane-warning')) {
                $tb.addClass('tab-pane-panel-body-bd-warning');
            }
        }
        function loadBillState() {
            var id = $('#bill').val();
            $.ajax({
                url: '@Url.Action("Stat", "SpendBill")',
                data: { id },
                success: function (data) {
                    $('#billStatContainer').html(data);
                },
                error: function (data) {
                    console.error(data);
                }
            });
        }
        function loadCatState() {
            var id = $('#category').val();
            $.ajax({
                url: '@Url.Action("CategoryStat")',
                data: { id },
                success: function (data) {
                    $('#catStatContainer').html(data);
                },
                error: function (data) {
                    console.error(data);
                }
            });
        }
        function loadSpendTop() {
            var $cont = $('#spendTopContainer');
            $.get('@Url.Action("SpendTop")', function (data) {
                $cont.html(data);
            });
        }

        function loadLastadd() {
            var $cont = $('#lastAddContainer');
            $.get('@Url.Action("SpendLastAdd")', function (data) {
                $cont.html(data);
                $('.last-add-remove').click(removeSpend);
            });
        }
        function removeSpend() {
            if (!confirm('Подтвердите удаление!')) return;
            var $card = $(this).closest('.last-add-card');
            var sid = $card.attr('sid');
            $.ajax({
                url: '@Url.Action("SpendDelete")',
                method: 'POST',
                data: { id: sid },
                success: function () {
                    $card.remove();
                    loadLastadd();
                },
                error: function (data) {
                    console.error(data);
                }
            });
        }

        function save(url, obj) {
            var sum = $('#sum').val().replace('.', ',');

            if (sum == '' || sum == '0') {
                alert('Необходимо указать сумму!');
                $('#sum').focus();
                return;
            }

            var $this = $(obj);
            $this.enabled = false;
            $.ajax({
                url: url,
                method: 'POST',
                data: { Date: $('#date').val(), Sum: sum, CategoryId: $('#category').val(), Comment: $('#comment').val(), BillId: $('#bill').val() },
                success: function () {
                    window.location.reload();
                },
                error: function (data) {
                    console.log(data);
                    $this.enabled = true;
                }
            });
        }
    </script>
}